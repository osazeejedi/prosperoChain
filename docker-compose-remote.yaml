version: '3.6'

x-quorum-def:
  &quorum-def
  restart: "always"
  image: quorumengineering/quorum:latest
  expose:
    - "21000"
    - "50400"
    - "8545"
    - "8546"
    - "8547"
  healthcheck:
    test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8545"]
    interval: 3s
    timeout: 3s
    retries: 10
    start_period: 5s
  entrypoint:
    - /bin/sh
    - -c
    - |
      # Initialize genesis block if not already initialized
      if [ ! -d "/qdata/dd/geth/chaindata" ]; then
        echo "Initializing genesis block..."
        geth --datadir /qdata/dd init /qdata/dd/genesis.json
      fi
      
      # Check if we should wait for Tessera
      if [ "$${PRIVATE_CONFIG:-}" != "ignore" ]; then
        UDS_WAIT=10
        for i in $$(seq 1 100)
        do
          set -e
          if [ -S /qdata/tm.ipc ]; then
            break
          fi
          echo "Waiting for /qdata/tm.ipc to be created..."
          sleep $${UDS_WAIT}
        done
        echo "Found /qdata/tm.ipc file. Starting Quorum..."
        PRIVATE_CONFIG=/qdata/tm.ipc geth --datadir /qdata/dd \
          --nodiscover \
          --allow-insecure-unlock \
          --verbosity 5 \
          --istanbul.blockperiod 5 \
          --syncmode full \
          --mine \
          --miner.threads 1 \
          --http \
          --http.corsdomain "*" \
          --http.vhosts "*" \
          --http.addr 0.0.0.0 \
          --http.port 8545 \
          --http.api admin,eth,debug,miner,net,txpool,personal,web3,istanbul,quorumPermission,quorumExtension \
          --port 21000 \
          --unlock 0 \
          --password /qdata/passwords.txt
      else
        echo "Starting Quorum without private transaction support..."
        PRIVATE_CONFIG=ignore geth --datadir /qdata/dd \
          --nodiscover \
          --allow-insecure-unlock \
          --verbosity 5 \
          --istanbul.blockperiod 5 \
          --syncmode full \
          --mine \
          --miner.threads 1 \
          --http \
          --http.corsdomain "*" \
          --http.vhosts "*" \
          --http.addr 0.0.0.0 \
          --http.port 8545 \
          --http.api admin,eth,debug,miner,net,txpool,personal,web3,istanbul,quorumPermission,quorumExtension \
          --port 21000 \
          --unlock 0 \
          --password /qdata/passwords.txt
      fi

x-tessera-def:
  &tessera-def
  image: quorumengineering/tessera:latest
  expose:
    - "9000"
    - "9080"
  restart: "always"
  healthcheck:
    test: ["CMD-SHELL", "[ -S /qdata/tm.ipc ] || exit 1"]
    interval: 3s
    timeout: 3s
    retries: 20
    start_period: 5s
  entrypoint:
    - /bin/sh
    - -c
    - |
      mkdir -p /qdata/logs
      mkdir -p /qdata/tm
      cd /qdata
      rm -f tm.ipc
      echo "Starting Tessera with config:"
      cat /qdata/tessera-config.json
      java -Xms128M -Xmx128M -jar /tessera/tessera-app.jar -configfile /qdata/tessera-config.json >> /qdata/logs/tessera.log 2>&1

services:
  node-0:
    << : *quorum-def
    hostname: node-0
    ports:
      - "0.0.0.0:22000:8545"  # Expose RPC to all interfaces
      - "0.0.0.0:21000:21000"  # Expose P2P to all interfaces
    volumes:
      - ./qdata/node-0:/qdata
    depends_on:
      - tessera-0

  tessera-0:
    << : *tessera-def
    hostname: tessera-0
    ports:
      - "127.0.0.1:9080:9080"  # Only expose locally
    volumes:
      - ./qdata/node-0:/qdata

  node-1:
    << : *quorum-def
    hostname: node-1
    ports:
      - "127.0.0.1:22001:8545"  # Only expose locally
      - "127.0.0.1:21001:21000"  # Only expose locally
    volumes:
      - ./qdata/node-1:/qdata
    depends_on:
      - tessera-1

  tessera-1:
    << : *tessera-def
    hostname: tessera-1
    ports:
      - "127.0.0.1:9081:9080"  # Only expose locally
    volumes:
      - ./qdata/node-1:/qdata

  node-2:
    << : *quorum-def
    hostname: node-2
    ports:
      - "127.0.0.1:22002:8545"  # Only expose locally
      - "127.0.0.1:21002:21000"  # Only expose locally
    volumes:
      - ./qdata/node-2:/qdata
    depends_on:
      - tessera-2

  tessera-2:
    << : *tessera-def
    hostname: tessera-2
    ports:
      - "127.0.0.1:9082:9080"  # Only expose locally
    volumes:
      - ./qdata/node-2:/qdata

  node-3:
    << : *quorum-def
    hostname: node-3
    ports:
      - "127.0.0.1:22003:8545"  # Only expose locally
      - "127.0.0.1:21003:21000"  # Only expose locally
    volumes:
      - ./qdata/node-3:/qdata
    depends_on:
      - tessera-3

  tessera-3:
    << : *tessera-def
    hostname: tessera-3
    ports:
      - "127.0.0.1:9083:9080"  # Only expose locally
    volumes:
      - ./qdata/node-3:/qdata

  node-4:
    << : *quorum-def
    hostname: node-4
    ports:
      - "127.0.0.1:22004:8545"  # Only expose locally
      - "127.0.0.1:21004:21000"  # Only expose locally
    volumes:
      - ./qdata/node-4:/qdata
    depends_on:
      - tessera-4

  tessera-4:
    << : *tessera-def
    hostname: tessera-4
    ports:
      - "127.0.0.1:9084:9080"  # Only expose locally
    volumes:
      - ./qdata/node-4:/qdata

  explorer:
    image: blockscout/blockscout:latest
    restart: unless-stopped
    ports:
      - "127.0.0.1:4000:4000"  # Only expose locally
    healthcheck:
      test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:4000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      ETHEREUM_JSONRPC_HTTP_URL: http://node-0:8545
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/blockscout"
      NETWORK: Quorum-QBFT
      DISABLE_WEBAPP: "false"
      COIN: ETH
      ECTO_USE_SSL: "true"
      SUBNETWORK: "Quorum"
      CHAIN_ID: "1337"
      # Connection limiting parameters
      POOL_SIZE: "3"
      ECTO_POOL_SIZE: "2"
      DATABASE_TIMEOUT: "120000"
      ETHEREUM_JSONRPC_VARIANT: "geth"
      INDEXER_MEMORY_LIMIT: "2Gb"
      INDEXER_BATCH_SIZE: "25"
      # Queue parameters to prevent connection drops
      ECTO_QUEUE_TARGET: "10000"
      ECTO_QUEUE_INTERVAL: "10000"
      # Feature flags
      DISABLE_INDEXER: "false"
      DISABLE_READ_API: "false"
      DISABLE_WRITE_API: "true"
      DISABLE_STATS: "true"
      DISABLE_KNOWN_TOKENS: "true"
      DISABLE_REALTIME_INDEXER: "false"
      # Disable specific components causing connection issues
      DISABLE_VERIFIED_CONTRACTS_COUNTER: "true"
      DISABLE_BLOCK_REWARDS_VALIDATIONS: "true"
      DISABLE_EXCHANGE_RATES: "true"
      DISABLE_INDEXER_INTERNAL_TRANSACTIONS: "true"
      DISABLE_INDEXER_PENDING_TRANSACTIONS: "true"
      DISABLE_INDEXER_SANITIZE_BLOCK_CONSENSUS: "true"
      DISABLE_TOKEN_INSTANCE_FETCHER: "true"
      DISABLE_TOKEN_BALANCE_FETCHER: "true"
      DISABLE_TOKEN_TRANSFERS_COUNTER: "true"
      DISABLE_WITHDRAWALS_COUNTER: "true"
      DISABLE_PENDING_TRANSACTIONS_COUNTER: "true"
      DISABLE_AVERAGE_BLOCK_TIME: "true"
      DISABLE_ADDRESS_COIN_BALANCES_COUNTER: "true"
      DISABLE_INTERNAL_TRANSACTIONS_INDEXED_COUNTER: "true"
      DISABLE_BRIDGE: "true"
      DISABLE_BRIDGE_MARKET_CAP_UPDATE: "true"
      DISABLE_HISTORICAL_DATA_FETCHING: "true"
      # Minimal mode settings
      INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER: "true"
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: "true"
      INDEXER_DISABLE_TOKEN_BALANCES: "true"
      INDEXER_DISABLE_TOKEN_INSTANCE_FETCHER: "true"
      INDEXER_DISABLE_COIN_BALANCES_FETCHER: "true"
      INDEXER_DISABLE_CATALOGED_TOKEN_UPDATER_FETCHER: "true"
      INDEXER_DISABLE_UNCLES_FETCHER: "true"
      INDEXER_DISABLE_STAKING_POOLS_FETCHER: "true"
      INDEXER_DISABLE_WITHDRAWALS_FETCHER: "true"
      INDEXER_DISABLE_BLOCK_REWARD_FETCHER: "true"
      INDEXER_DISABLE_EMPTY_BLOCKS_SANITIZER: "true"
      INDEXER_DISABLE_REPLACED_TRANSACTION_FETCHER: "true"
    command: /bin/sh -c "/app/bin/blockscout start"
